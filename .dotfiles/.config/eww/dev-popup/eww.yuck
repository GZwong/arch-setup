(defwindow volume-popup
    :monitor 0
    :geometry (geometry :x "50%"
                        :y "90%"
                        :width "120px"
                        :height "40px"
                        :anchor "top center")
    :stacking "overlay"
    :exclusive false
	(revealer   :reveal volume-changed
				:transition "crossfade"
		(box	:class "vol-box"
				:orientation "h" 	  
				:space-evenly "false" 
				:spacing "2"
			(label  :class vol-icon
					:text "ðŸ”Š" 
					:class "vol-text")
			(scale	:class "vol-bar" 	  
					:value current-volume 
					:orientation "h"      
					:flipped false
					:tooltip "Volume: ${current-volume}%" 
					:max 101 
					:min 0 
					:onchange "amixer sset Master {}%" )
			(label  :text "${current-volume}%" 
					:class "vol-text")
		)
	)

)
(defpoll current-volume :interval ".2s" "amixer sget Master | grep 'Left:' | awk -F'[][]' '{ print $2 }' | tr -d '%' | grep -Eo '[0-9]+' || echo 0")
(defvar volume-changed false)


(defwindow brightness-popup
	:monitor 0
	:geometry (geometry :x "50%"
						:y "90%"
						:width "120px"
						:height "40px"
						:anchor "top center")
	:stacking "overlay"
	:exclusive false
	(revealer   :reveal brightness-changed
				:transition "crossfade"
		(box	:class "bright-box"
				:orientation "h" 	  
				:space-evenly "false" 
				:spacing "2"
			(label  :class bright-icon
					:text "ðŸ”†" 
					:class "bright-text")
			(scale	:class "bright-bar" 	  
					:value current-brightness 
					:orientation "h"      
					:flipped false
					:tooltip "brightness: ${current-brightness}%" 
					:max 101 
					:min 0 
					:onchange "brightnessctl set {}%" )
			(label  :text "${current-brightness}%" 
					:class "bright-text")
		)
	)
)
(defpoll current-brightness :interval "0.2s" "max=$(brightnessctl max); current=$(brightnessctl get); echo $(( 100 * current / max ))")
(defvar brightness-changed false)


(defwindow temperature-popup
	:monitor 0
	:geometry (geometry :x "50%"
						:y "90%"
						:width "120px"
						:height "40px"
						:anchor "top center")
	:stacking "overlay"
	:exclusive false
	(revealer   :reveal temperature-changed
				:transition "crossfade"
		(box	:class "temperature-box"
				:orientation "h" 	  
				:space-evenly "false" 
				:spacing "2"
			(image  :path "./assets/blue-moon.png"
					:image-width 18)
			; (label  :class "night-icon"
			; 		:text "ðŸŒ™" 
			; 		:class "temperature-text")
			(scale	:class "temperature-bar" 	  
					:value current-temperature
					:orientation "h"      
					:flipped false
					:max 10000 
					:min 0 
					:onchange "hyprctl hyprsunset temperature {}")
			(label  :text "${current-temperature}" 
					:class "temperature-text")
		)
	)
)
(defpoll current-temperature :interval "0.2s" "hyprctl hyprsunset temperature")
(defvar temperature-changed false)